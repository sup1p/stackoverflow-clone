import os

from django.db import models
from django.contrib.auth.models import AbstractUser
import io
from PIL import Image
from .supabase_client import upload_file_to_supabase
from Post.models import Tag



# Create your models here.
class CustomUser(AbstractUser):
    email = models.EmailField(unique=True)
    username = models.CharField(max_length=100)

    USERNAME_FIELD = 'email'
    REQUIRED_FIELDS = ['username']

    bio = models.TextField(null=True, blank=True)
    display_name = models.CharField(max_length=100,default='')
    avatar_url = models.CharField(default="https://aenacihkjsxjdpkeqxja.supabase.co/storage/v1/object/public/stackoverflowcopyomar//IMG-20221013-WA0032.jpg",max_length=255, null=True, blank=True)

    def save_avatar(self, file_data, file_name):
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞
            if not isinstance(file_data, io.BytesIO):
                # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª –∫–∞–∫ –±–∞–π—Ç—ã –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ BytesIO
                file_data = io.BytesIO(file_data.read())

            # –ü–µ—Ä–µ–º–µ—â–∞–µ–º —É–∫–∞–∑–∞—Ç–µ–ª—å –≤ –Ω–∞—á–∞–ª–æ —Ñ–∞–π–ª–∞
            file_data.seek(0)

            # üîç –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –ª–æ–∫–∞–ª—å–Ω–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ (—Å–æ—Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å –ø—Ä–æ–µ–∫—Ç–æ–º)
            with open(f"debug_{file_name}", "wb") as debug_file:
                debug_file.write(file_data.getvalue())

            # –¢–µ–ø–µ—Ä—å –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª –Ω–µ –ø–æ–≤—Ä–µ–∂–¥—ë–Ω
            try:
                image = Image.open(file_data)
                image.verify()  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏—è
                print(f"‚úÖ –§–∞–π–ª {file_name} —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫—Ä—ã—Ç –∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω. –§–æ—Ä–º–∞—Ç: {image.format}")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")
                return

            # –ü–µ—Ä–µ–º–µ—â–∞–µ–º —É–∫–∞–∑–∞—Ç–µ–ª—å –æ–±—Ä–∞—Ç–Ω–æ –≤ –Ω–∞—á–∞–ª–æ
            file_data.seek(0)

            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞ –≤ Supabase
            full_path = f"avatars/{self.username}/{file_name}"

            # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª –Ω–∞ Supabase
            success = upload_file_to_supabase(file_data, os.getenv('SUPABASE_BUCKET_NAME'), full_path)

            if success:
                supabase_url = os.getenv('SUPABASE_URL').strip('/')
                self.avatar_url = f"{supabase_url}/storage/v1/object/public/{os.getenv('SUPABASE_BUCKET_NAME')}/{full_path}"
                self.save()
                print(f"‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω: {self.avatar_url}")
            else:
                raise Exception("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ –Ω–∞ Supabase.")

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≤ save_avatar(): {e}")

    reputation = models.IntegerField(default=1)
    location = models.CharField(max_length=255,null=True, blank=True)
    member_since = models.DateTimeField(auto_now_add=True)
    gold_badges = models.PositiveIntegerField(default=0)
    silver_badges = models.PositiveIntegerField(default=0)
    bronze_badges = models.PositiveIntegerField(default=0)
    question_count = models.IntegerField(default=0)
    answer_count = models.IntegerField(default=0)
    top_tags = models.ManyToManyField(Tag, related_name='users', blank=True)

    def __str__(self):
        return self.username
